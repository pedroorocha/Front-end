// <auto-generated />
using System;
using APS_Backend.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APS_Backend.Persistence.Migrations
{
    [DbContext(typeof(APSBackendDBContext))]
    partial class APSBackendDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("APS_Backend.Domain.Aluno", b =>
                {
                    b.Property<int>("Matricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Curso")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DataDeNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("HorasComplementaresA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HorasComplementaresB")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HorasComplementaresC")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HorasComplementaresD")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HorasComplementaresE")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HorasComplementaresF")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Matricula");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("APS_Backend.Domain.AlunoEspera", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FilaEsperaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DataInscricao")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("HoraInscricao")
                        .HasColumnType("TEXT");

                    b.HasKey("AlunoId", "FilaEsperaId");

                    b.HasIndex("FilaEsperaId");

                    b.ToTable("AlunoEsperas");
                });

            modelBuilder.Entity("APS_Backend.Domain.AlunoEvento", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("AlunoId", "EventoId");

                    b.HasIndex("EventoId");

                    b.ToTable("AlunoEventos");
                });

            modelBuilder.Entity("APS_Backend.Domain.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("FilaEsperaId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeOnly>("Hora")
                        .HasColumnType("TEXT");

                    b.Property<int>("HorasComplementares")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Palestrantes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProfessorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QtdMaximaParticipantes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tema")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FilaEsperaId")
                        .IsUnique();

                    b.HasIndex("ProfessorId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("APS_Backend.Domain.FilaEspera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EventoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QtdVagas")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("FilaEsperas");
                });

            modelBuilder.Entity("APS_Backend.Domain.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Curso")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCoordenador")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Nascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Professors");
                });

            modelBuilder.Entity("APS_Backend.Domain.AlunoEspera", b =>
                {
                    b.HasOne("APS_Backend.Domain.Aluno", "Aluno")
                        .WithMany("AlunoEsperas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APS_Backend.Domain.FilaEspera", "FilaEspera")
                        .WithMany("AlunoEsperas")
                        .HasForeignKey("FilaEsperaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("FilaEspera");
                });

            modelBuilder.Entity("APS_Backend.Domain.AlunoEvento", b =>
                {
                    b.HasOne("APS_Backend.Domain.Aluno", "Aluno")
                        .WithMany("AlunoEventos")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APS_Backend.Domain.Evento", "Evento")
                        .WithMany("AlunoEventos")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("APS_Backend.Domain.Evento", b =>
                {
                    b.HasOne("APS_Backend.Domain.FilaEspera", "FilaEspera")
                        .WithOne("Evento")
                        .HasForeignKey("APS_Backend.Domain.Evento", "FilaEsperaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("APS_Backend.Domain.Professor", "Professor")
                        .WithMany("Eventos")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("FilaEspera");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("APS_Backend.Domain.Aluno", b =>
                {
                    b.Navigation("AlunoEsperas");

                    b.Navigation("AlunoEventos");
                });

            modelBuilder.Entity("APS_Backend.Domain.Evento", b =>
                {
                    b.Navigation("AlunoEventos");
                });

            modelBuilder.Entity("APS_Backend.Domain.FilaEspera", b =>
                {
                    b.Navigation("AlunoEsperas");

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("APS_Backend.Domain.Professor", b =>
                {
                    b.Navigation("Eventos");
                });
#pragma warning restore 612, 618
        }
    }
}
